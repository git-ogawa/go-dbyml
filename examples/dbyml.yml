---
# file: dbyml.yml
# This is a configration file used by go-dbyml.
# The settings related to image build are written in yaml syntax.
# The values set in each field, so you can edit them according to your build settings.


# The image section manages docker image attributes.
image:
  # name: Image name. This field is required.
  name: go-dbyml-sample

  # tag: Image tag.
  tag: latest

  # path: Path to a directory containing Dockerfile.
  path: .

  # dockerfile: Filename of Dockerfile.
  dockerfile: Dockerfile

  # build_args: Arguments corresponding to build-args of docker build.
  # Set list of key:value
  build_args:
    key1: this is key1
    key2: this is key2

  # label: Arguments corresponding to label of docker build.
  # Use quotation when the key name includes "." such as com.test.name
  # Set list of key:value
  label:
    label1: test label1
    label2: test label2
    "com.test.name": test name

  # docker_host: URL to the Docker server.
  # Set protocol:hostname:port for example unix:///var/run/docker.sock or tcp://127.0.0.1:1234.
  # Default to unix:///var/run/docker.sock
  docker_host: unix:///var/run/docker.sock


# The build section manages some options on build such as using build-cache or showing build information.
build:

  # target: Name of the build-stage to build in a multi-stage Dockerfile.
  target: ''

  # no_cache: Set true not to use build cache when build the image.
  # default: false
  no_cache: false

  # verbose: Set true to show build settings on build.
  # default: true
  verbose: true

# The registry section manages the information about registry to which the image push.
registry:
  # enabled: Enable push to a registry. Set false not to push the image
  # to the registry even if these fields are set.
  enabled: false

  # host: Registry name or ip address and port.
  host: myregistry.com:5000

  # project: When set the project, the image to be pushed to the registry will be {host}:{port}/{project}/{name}:{tag},
  # otherwise {host}:{port}/{name}:{tag}
  project: public

  # insecure: Set true to allow insecure server connections.
  insecure: false

  # auth: Credentials for a registry. This will be used when push a image to basic-auth registry.
  auth:
    # username: Registry auth username
    username:

    # password: Registry auth password
    password:

# The buildkit section manages the settings when build with buildkit.
buildkit:
  # enabled: Set true to enable build with buildkit.
  enabled: true
  # output: The output field sets output format of the image to be built
  output:
    # type: Type of output image.
    type: image
    # name: Set registry and image. e.g. `[registry]:[port]/[project]/[image]:[tag]`
    name: myregistry.com/go-dbyml-sample:latest
    # insecure: Set true if push the image insecure registry such as insecure private registry
    insecure: false
  # The cache field sets import and export build cache.
  cache:
    # export: Export settings of build cache.
    # Type must be either inline or registry. Set inline to export the cache embed with the image and pushing them to registry together.
    # Set registry to export build cache to the specified registry. In this case, set the registry in value field. e.g.`[registry]:[port]/[project]/[image]:[tag]`.
    export:
      type: inline
      value:
    # import: Import settings of build cache.
    # Type must be registry. Set registry to import build cache from the specified registry. In this case, set the registry in value field. e.g.`[registry]:[port]/[project]/[image]:[tag]`.
    import:
      type: registry
      value: myregistry.com/go-dbyml-sample:latest
  # platform: Set the list of architectures if want to build  a image that support multi-platform.
  platform:
    - linux/amd64
    - linux/arm64
  # remove: Set true to remove a builder container after build is successfully completed.
  remove: true
